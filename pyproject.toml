[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "lazyslide"
description = "Modularized and scalable whole slide image analysis"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
authors = [
    {name = "Yimin Zheng", email = "yzheng@cemm.at"},
    {name = "Ernesto Abila", email = "eabila@cemm.at"},
    {name = "AndrÃ© F. Rendeiro", email = "arendeiro@cemm.at"},
]
keywords = ["histopathology", "whole slide image", "image analysis", "segmentation", "deep learning"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: File Formats",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]
Documentation = "https://lazyslide.readthedocs.io"
repository = "https://github.com/rendeirolab/lazyslide"
dynamic = ["version"]
dependencies = [
    "wsidata>=0.4.0",
    "numba>=0.61.0",
    "scikit-learn>=1.0",
    "matplotlib>=3.9.0",
    "matplotlib-scalebar>=0.9.0",
    "legendkit>=0.3.4",
    "rich>=13.0.0",
    "psutil>=5.8.0",
    "cyclopts>=3.0.0",
    "timm>=1.0.3",
    "torch>=2.0.0",
    "seaborn>=0.12.2",
]

[project.optional-dependencies]
all = [
    "scipy>=1.15.1",
    "scanpy>=1.10.4",
    "torchvision>=0.15",  # >0.15
    "torchstain>=1.4.1",
]

# Define entry points
[project.scripts]
lazyslide = "lazyslide.__main__:app"
zs = "lazyslide.__main__:app"

[tool.hatch.version]
path = "src/lazyslide/__init__.py"

[tool.hatch.build.targets.sdist]
exclude = [
    "docs",
    "data",
    "assets",
    "tests",
    "scripts",
    ".readthedocs.yaml",
    ".github",
    ".gitignore",
]
include = [
    "README.md",
    "LICENSE",
    "pyproject.toml",
    "src/lazyslide",
]

[tool.hatch.build.targets.wheel]
packages = ["src/lazyslide", "README.md", "LICENSE", "pyproject.toml"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.ruff]
lint.ignore = ["F401"]
line-length = 88

[tool.ruff.lint.per-file-ignores]
"tests/test_example.py" = ["E402"]
"tests/test_loader.py" = ["E402"]

[tool.mypy]
ignore_missing_imports = true

[tool.taskipy.tasks]
hello = "echo Hello, World!"
test = "pytest tests"
doc-build = "sphinx-build -b html docs/source docs/build"
doc-clean-build = "python docs/clean_up.py && sphinx-build -b html docs/source docs/build"
doc-serve = "python -m http.server -d docs/build"
fmt = "ruff format docs/source src/lazyslide tests"

[tool.uv]
default-groups = ["dev", "docs"]

[dependency-groups]
dev = [
    "jupyterlab>=4.3.5",
    "pre-commit>=4.1.0",
    "pytest>=8.3.4",
    "ruff>=0.9.4",
    "taskipy>=1.14.1",
    "pytest-cov>=6.0.0",
    "torchvision>=0.21.0",
    "torchstain>=1.4.1",
    "pyright>=1.1.393",
    "matplotlib>=3.10.0",
    "matplotlib-scalebar>=0.9.0",
    "scikit-learn>=1.6.1",
    "scanpy>=1.10.4",
    "scipy>=1.15.1",
    "segmentation-models-pytorch>=0.4.0",
    "albumentations>=2.0.3",
    "lxml>=5.3.1",
    "igraph>=0.11.8",
    "ipywidgets>=8.1.5",
    "marsilea>=0.5.1",
    "transformers>=4.49.0",
    "conch",
    "parse>=1.20.2",
    "gseapy>=1.1.7",
    "mpl-fontkit>=0.5.1",
    "matplotlib-venn>=1.1.2",
    "muon>=0.1.7",
    "mofapy2>=0.7.2",
    "pypalettes>=0.1.5",
]
docs = [
    "sphinx>=8.1.3",
    "sphinx-copybutton>=0.5.2",
    "sphinx-design>=0.6.1",
    "myst-nb>=1.1.2",
    "numpydoc>=1.8.0",
    "pydata-sphinx-theme>=0.16.1",
    "sphinx>=8.1.3",
    "sphinx-copybutton>=0.5.2",
    "sphinx-design>=0.6.1",
]

[tool.uv.sources]
wsidata = { git = "https://github.com/rendeirolab/wsidata", branch = "main" }
# wsidata = { path = "../wsidata", editable = true }
conch = { git = "https://github.com/mahmoodlab/CONCH.git" }

[tool.uv.workspace]
members = ["scripts/grandqc/artifacts_detection"]
